# –ò–º–ø–æ—Ä—Ç TELEBOT | https://github.com/eternnoir/pyTelegramBotAPI
import random
import time

import requests
import os
from pprint import pprint
import telebot
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º types
from telebot import types
# –ò–º–ø–æ—Ä—Ç "—Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
from botdates import *
# –ò–º–ø–æ—Ä—Ç TELEGRAPH
from telegraph import Telegraph
# –ò–º–ø–æ—Ä—Ç –±–∞–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ APIGoogle
import gspread
# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
import datetime

# –¢–æ–∫–µ–Ω –¥–ª—è —Å–≤—è–∑–∏ —Å –±–æ—Ç–æ–º
bot = telebot.TeleBot(botkey)

# –ö–æ–º–∞–Ω–¥a start
@bot.message_handler(commands = ['start'])
def start(message):
    start_message(message)
# –ö–æ–º–∞–Ω–¥—ã –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ —á–∞—Ç–µ
@bot.message_handler(content_types= ['text'])
def func(message):
    if (message.text == "–í—Å–µ –∫–∞–Ω–∞–ª—ã"):
        channelInfo(message)
    elif (message.text == "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∏–∫—Å–æ–≤"):
        createPagesWithComics(message)
    elif (message.text == "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∏–∫—Å"):
        createNewComix(message)
    elif (message.text == "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ–º–∏–∫—Å"):
        postInChannelRandomComix(message)
    elif (message.text == "–ö–Ω–æ–ø–∫–∞ –¥–ª—è GoogleSheets"):
        workWithGoogleSheets(message)
    else:
        senderrormessage(message)

#–§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞(start)
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–í—Å–µ –∫–∞–Ω–∞–ª—ã")
    btn2 = types.KeyboardButton("ü§∑‚Äç‚ôÇÔ∏è–≠—Öü§∑‚Äç‚ôÇÔ∏è")
    btn3 = types.KeyboardButton("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∏–∫—Å–æ–≤")
    btn4 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∏–∫—Å")
    btn5 = types.KeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ–º–∏–∫—Å")
    btn6 = types.KeyboardButton("–ö–Ω–æ–ø–∫–∞ –¥–ª—è GoogleSheets")
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –¥–ª—è –ø–æ—Å—Ç–∏–Ω–≥–∞ –∫–æ–º–∏–∫—Å–æ–≤".format(
                         message.from_user))
    if (message.chat.id == id):
        markup.add(btn1, btn3, btn4, btn5, btn6)
        bot.send_message(message.chat.id,
                         text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:", reply_markup=markup)
    else:
        markup.add(btn2)
        bot.send_message(message.chat.id, text="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!", reply_markup=markup)

#–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ —Å–æ–æ–±–µ—â–Ω–∏—è
def senderrormessage(message):
    text = "–Ø —á—Ç–æ-—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é( –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞"
    bot.send_message(message.chat.id, text)

#–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
def channelInfo(message):
    text = "–û—Ç–æ–±—Ä–∞–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ –ø–æ—Å—Ç–∏–Ω–≥–∞"
    bot.send_message(message.chat.id, text)
    bot.send_message(message.chat.id, "ID –∫–∞–Ω–∞–ª–∞ –∫—É–¥–∞ –ø–æ—Å—Ç–∏–º:\n" + channel_id)
    bot.send_message(message.chat.id, "–ù–∞–∑–≤–∞–Ω–∏–µ TELEGRAM –∫–∞–Ω–∞–ª–∞:\n" + channel_name)
    bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:\n" + channel_url)

#–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü tepegraph
def createPagesWithComics(message):
    # –°–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
    telegraph = Telegraph()
    telegraph.create_account(short_name='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞')
    # –ü—É—Ç—å –¥–æ –ø–∞–ø–∫–∏ —Å –∫–æ–º–∏–∫—Å–∞–º–∏
    pathcomix = './comix/'
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∞–ø–æ–∫
    directory_list = os.listdir(pathcomix)
    print("directory_list: ", directory_list)
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∏–∫—Å–æ–≤
    j = 0
    dt = datetime.datetime.now()
    tm = datetime.time(10, 30)
    timetopost = datetime.datetime.combine(dt, tm) + datetime.timedelta(days = 1)

    while j < len(directory_list):
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –¥–æ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ –≤ –º–∞—Å—Å–∏–≤–µ
        way_file_list = pathcomix + directory_list[j] + "/"
        print("way_file_list: ", way_file_list)
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–∏–ª–æ–≤ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ
        file_list = os.listdir(way_file_list)
        print("file_list: ", file_list)
        if len(file_list):
            file_list2 = []
            i = 0
            content = ""
            # –ü—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ —Ñ–∞–∏–ª–∞–º –≤ –ø–∞–ø–∫–µ
            while i < len(file_list):
                endpath = way_file_list + file_list[i]
                with open(endpath, 'rb') as f:
                    try:
                        path = requests.post(
                            'https://telegra.ph/upload',
                            files={directory_list[j]: (directory_list[j], f, 'image/jpg')}
                            # image/gif, image/jpeg, image/jpg, image/png, video/mp4
                        ).json()[0]['src']
                        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
                        file_list2.append(path)
                        print(path)
                    except Exception as e:
                        print(e)
                        time.sleep(5)
                i = i + 1
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                content += "<img src='{}'/>".format(path)
            # –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏
            response = telegraph.create_page(
                directory_list[j],
                html_content=content
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞—á–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–º–∏–∫—Å–∞
            textmessage = "–ö–æ–º–∏–∫—Å: " + directory_list[j] + "\n" + "–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: " + response['url']
            bot.send_message(message.chat.id, textmessage)
            print(response['url'])
            now = datetime.datetime.now()
            nowdatetime = now.strftime("%d-%m-%Y %H:%M:%S")
            timetopost = timetopost + datetime.timedelta(days = 1)
            addedNewDatesInSheet(directory_list[j], nowdatetime, timetopost.strftime("%d.%m.%Y %H:%M:%S"), response['url'])
            j = j + 1
        else:
            text = "–í –ø–∞–ø–∫–µ " + directory_list[j] + " –Ω–µ—Ç —Ñ–∞–∏–ª–æ–≤"
            bot.send_message(message.chat.id, text)
            j = j + 1
            continue

    text = "–ö–æ–º–∏–∫—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã."
    bot.send_message(message.chat.id, text)

#–§—É–Ω–∫—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª
def postInChannelRandomComix(message):
    #–ü–æ—Å—Ç –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∏—Å–∞–Ω –≤ botdates.py
    #–ó–∞—Ö–æ–¥–∏–º –≤ —Ç–∞–±–ª–∏—Ü—É –∫–æ–º–∏–∫—Å–æ–≤
    cread_file = "token.json"
    gc = gspread.service_account(cread_file)
    table = gc.open(name_sheet)
    worksheet = table.worksheet("–ö–æ–º–∏–∫—Å—ã")
    dates = worksheet.get_all_records()
    #–§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∫–æ–º–∏–∫—Å–∞–º–∏
    i = 0
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    while i < len(dates):
        btn = types.KeyboardButton(dates[i]['–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∏–∫—Å–∞'])
        markup.add(btn)
        i = i + 1
    bot.send_message(message.chat.id,
                     text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∏–∫—Å –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å:", reply_markup=markup)
    bot.register_next_step_handler(message, postInChannelRandomComix2)
#–§—É–Ω–∫—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª
def postInChannelRandomComix2(message):
    bot.register_next_step_handler(message, start_message)
    if (message.text == "–£—Ä–∞–≥–∞–Ω –°–∏–ª—ã #01"):
        bot.send_message(message.chat.id,"–ó–∞–ø–æ—â–µ–Ω–æ!")

#–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏–∫—Å–∞ –Ω–∞ –∫–æ–º–ø
def createNewComix(message):
    text = "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = "–î–æ–±–∞–≤–∏—Ç—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π"
    btn2 = "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π"
    btn3 = "–í—ã–π—Ç–∏ –∏–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text, reply_markup = markup)
    bot.register_next_step_handler(message, createNewComix2)
#–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏–∫—Å–∞ –Ω–∞ –∫–æ–º–ø2
def createNewComix2(message):
    namefolder = message.text
    path = "/Users/–†–µ–∑–µ—Ä–≤–Ω—ã–π2/PycharmProjects/comixonlinebot/comix/" + namefolder
    os.mkdir(path)
    nexttext = "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏. –ü–æ –æ–¥–Ω–æ–π –∏ –≤ –ø–æ—Ä—è–¥–∫–µ —Å –Ω–∞—á–∞–ª–∞ –¥–æ –∫–æ–Ω—Ü–∞."
    bot.send_message(message.chat.id, nexttext)
    bot.register_next_step_handler(message, createNewComix3, path)
#–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏–∫—Å–∞ –Ω–∞ –∫–æ–º–ø3
def createNewComix3(message, folderpath):
    #–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–∏–ª–µ
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    #–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ TELEGRAM —Ñ–∞–∏–ª –∏ –ø–æ–º–µ—â–∞–µ–º –µ–≥–æ –≤ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É
    downloaded_file = bot.download_file(file_info.file_path)
    #–î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω—é—é
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–∏–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
    directory_list = os.listdir(folderpath)
    last_number = len(directory_list) + 1
    path = folderpath + "/" + str(last_number) + ".jpg"
    with open(path, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π, —è —Å–æ—Ö—Ä–∞–Ω—é —ç—Ç–æ")

#–§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å GoogleSheets
def workWithGoogleSheets(message):
    cread_file = "token.json"
    gc = gspread.service_account(cread_file)
    table = gc.open(name_sheet)
    worksheet = table.worksheet("–ö–æ–º–∏–∫—Å—ã")
    tableUrl = "–¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: " + table.url
    bot.send_message(message.chat.id, tableUrl)
    dates = worksheet.get_all_records()
    print(dates)
    pprint(dates)

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ GoogleSheets
def addedNewDatesInSheet(namecomix, dategenerationcomix, timetopost, url):
    cread_file = "token.json"
    gc = gspread.service_account(cread_file)
    table = gc.open(name_sheet)
    worksheet = table.worksheet("–ö–æ–º–∏–∫—Å—ã")
    newstr = len(worksheet.col_values(1))+1
    newnumber = newstr-1
    worksheet.update_cell(newstr, 1, newnumber)
    worksheet.update_cell(newstr, 2, namecomix)
    worksheet.update_cell(newstr, 3, dategenerationcomix)
    worksheet.update_cell(newstr, 4, timetopost)
    worksheet.update_cell(newstr, 5, url)

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å—Ç–∞
def generationPostDateTime(namecomix):
    cread_file = "token.json"
    gc = gspread.service_account(cread_file)
    table = gc.open(name_sheet)
    worksheet = table.worksheet("–õ–∏—Å—Ç1")
    allcomix = worksheet.col_values(2)
    publishdatetime = worksheet.col_values(4)
    pprint(allcomix)
    pprint(publishdatetime)
    print(namecomix)
    nowdatetime = datetime.datetime.now().strftime("%d-%m-%Y %H:%M")
    i = 0
    while i < len(allcomix):
        if (allcomix[i] == namecomix):
            print("–¢–∞–∫–æ–π –∫–æ–º–∏–∫—Å –µ—Å—Ç—å. –î–∞—Ç–∞ –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: " + publishdatetime[i])
            newpublishdatetime = datetime.datetime.now() + datetime.timedelta(days=10)
            print("–ù–æ–≤–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–º–∏–∫—Å–∞: " + newpublishdatetime.strftime("%d-%m-%Y %H:%M"))
            return newpublishdatetime
        else:
            return nowdatetime
        i = i + 1

# –ó–∞–ø—É—Å—Ç–∏–ª –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å –±–æ—Ç–∞ Telegram
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(e)
        time.sleep(15)